import { create } from 'ipfs-http-client';
import { ethers } from 'ethers';

// 初始化 IPFS 客户端
const ipfs = create({
    host: 'ipfs.infura.io',  // 使用 Infura 的公共 IPFS 节点
    port: '5001',
    protocol: 'https'  // 使用 HTTPS 进行安全连接
});

// StoreCIDs 和 receiveCids 合约的地址和 ABI
const provider = new ethers.JsonRpcProvider('https://eth-sepolia.g.alchemy.com/v2/your-alchemy-api-key');

const storeContractAddress = '0x63932EEDA71Dae7c17A5633A40e99b16D721CdAD';  // 替换为 StoreCIDs 合约地址
const storeContractAbi = [{
    "_format": "hh-sol-artifact-1",
    "contractName": "StoreCIDs",
    "sourceName": "contracts/store_cids.sol",
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "cid",
            "type": "string"
          }
        ],
        "name": "DeleteCID",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "cid",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "digest",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "StoreCID",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "cids",
        "outputs": [
          {
            "internalType": "string",
            "name": "cid",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          },
          {
            "internalType": "bytes32",
            "name": "digest",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_receiver",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "index",
            "type": "uint256"
          }
        ],
        "name": "deleteCid",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_receiver",
            "type": "address"
          }
        ],
        "name": "getFiles",
        "outputs": [
          {
            "components": [
              {
                "internalType": "string",
                "name": "cid",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              },
              {
                "internalType": "bytes32",
                "name": "digest",
                "type": "bytes32"
              }
            ],
            "internalType": "struct StoreCIDs.CID[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_cid",
            "type": "string"
          },
          {
            "internalType": "bytes32",
            "name": "_digest",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "_receiver",
            "type": "address"
          }
        ],
        "name": "storeFile",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b506115ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c80622e28a514610050578063433bf37b1461008357806350b7c561146100b3578063bf6be7af146100cf575b600080fd5b61006a60048036038101906100659190610ad8565b6100eb565b60405161007a9493929190610bdf565b60405180910390f35b61009d60048036038101906100989190610c2b565b6101e0565b6040516100aa9190610df4565b60405180910390f35b6100cd60048036038101906100c89190610ad8565b6103e7565b005b6100e960048036038101906100e49190610f77565b610863565b005b6000602052816000526040600020818154811061010757600080fd5b90600052602060002090600402016000915091505080600001805461012b90611015565b80601f016020809104026020016040519081016040528092919081815260200182805461015790611015565b80156101a45780601f10610179576101008083540402835291602001916101a4565b820191906000526020600020905b81548152906001019060200180831161018757829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b60603373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790611092565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156103dc57838290600052602060002090600402016040518060800160405290816000820180546102e190611015565b80601f016020809104026020016040519081016040528092919081815260200182805461030d90611015565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481525050815260200190600101906102ae565b505050509050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061046a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610461906110fe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf90611092565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061052a5761052961111e565b5b9060005260206000209060040201600001805461054690611015565b80601f016020809104026020016040519081016040528092919081815260200182805461057290611015565b80156105bf5780601f10610594576101008083540402835291602001916105bf565b820191906000526020600020905b8154815290600101906020018083116105a257829003601f168201915b505050505090506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050610652919061117c565b815481106106635761066261111e565b5b90600052602060002090600402016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106106c1576106c061111e565b5b9060005260206000209060040201600082018160000190816106e39190611372565b506001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301559050506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806107b0576107af61145a565b5b6001900381819060005260206000209060040201600080820160006107d591906109d3565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160009055505090558273ffffffffffffffffffffffffffffffffffffffff167fec53acee17e291d4c2113d26ee57d287301f82fafa5871c806185942df36fbdf826040516108569190611489565b60405180910390a2505050565b600060405180608001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481525090506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161091b91906114ab565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015550508173ffffffffffffffffffffffffffffffffffffffff167f9e579ea0c4da0f88f445fc1ca29e6141a190d5ad059c58931481738eebddfb03853386426040516109c5949392919061157d565b60405180910390a250505050565b5080546109df90611015565b6000825580601f106109f15750610a10565b601f016020900490600052602060002090810190610a0f9190610a13565b5b50565b5b80821115610a2c576000816000905550600101610a14565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6f82610a44565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b6000819050919050565b610ab581610aa2565b8114610ac057600080fd5b50565b600081359050610ad281610aac565b92915050565b60008060408385031215610aef57610aee610a3a565b5b6000610afd85828601610a8d565b9250506020610b0e85828601610ac3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b52578082015181840152602081019050610b37565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b7a82610b18565b610b848185610b23565b9350610b94818560208601610b34565b610b9d81610b5e565b840191505092915050565b610bb181610a64565b82525050565b610bc081610aa2565b82525050565b6000819050919050565b610bd981610bc6565b82525050565b60006080820190508181036000830152610bf98187610b6f565b9050610c086020830186610ba8565b610c156040830185610bb7565b610c226060830184610bd0565b95945050505050565b600060208284031215610c4157610c40610a3a565b5b6000610c4f84828501610a8d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610ca082610b18565b610caa8185610c84565b9350610cba818560208601610b34565b610cc381610b5e565b840191505092915050565b610cd781610a64565b82525050565b610ce681610aa2565b82525050565b610cf581610bc6565b82525050565b60006080830160008301518482036000860152610d188282610c95565b9150506020830151610d2d6020860182610cce565b506040830151610d406040860182610cdd565b506060830151610d536060860182610cec565b508091505092915050565b6000610d6a8383610cfb565b905092915050565b6000602082019050919050565b6000610d8a82610c58565b610d948185610c63565b935083602082028501610da685610c74565b8060005b85811015610de25784840389528151610dc38582610d5e565b9450610dce83610d72565b925060208a01995050600181019050610daa565b50829750879550505050505092915050565b60006020820190508181036000830152610e0e8184610d7f565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e5882610b5e565b810181811067ffffffffffffffff82111715610e7757610e76610e20565b5b80604052505050565b6000610e8a610a30565b9050610e968282610e4f565b919050565b600067ffffffffffffffff821115610eb657610eb5610e20565b5b610ebf82610b5e565b9050602081019050919050565b82818337600083830152505050565b6000610eee610ee984610e9b565b610e80565b905082815260208101848484011115610f0a57610f09610e1b565b5b610f15848285610ecc565b509392505050565b600082601f830112610f3257610f31610e16565b5b8135610f42848260208601610edb565b91505092915050565b610f5481610bc6565b8114610f5f57600080fd5b50565b600081359050610f7181610f4b565b92915050565b600080600060608486031215610f9057610f8f610a3a565b5b600084013567ffffffffffffffff811115610fae57610fad610a3f565b5b610fba86828701610f1d565b9350506020610fcb86828701610f62565b9250506040610fdc86828701610a8d565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061102d57607f821691505b6020821081036110405761103f610fe6565b5b50919050565b7f596f7520617265206e6f7420746865206f776e65722100000000000000000000600082015250565b600061107c601683610b23565b915061108782611046565b602082019050919050565b600060208201905081810360008301526110ab8161106f565b9050919050565b7f496e76616c696420496e64657800000000000000000000000000000000000000600082015250565b60006110e8600d83610b23565b91506110f3826110b2565b602082019050919050565b60006020820190508181036000830152611117816110db565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118782610aa2565b915061119283610aa2565b92508282039050818111156111aa576111a961114d565b5b92915050565b6000815490506111bf81611015565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111eb565b61123286836111eb565b95508019841693508086168417925050509392505050565b6000819050919050565b600061126f61126a61126584610aa2565b61124a565b610aa2565b9050919050565b6000819050919050565b61128983611254565b61129d61129582611276565b8484546111f8565b825550505050565b600090565b6112b26112a5565b6112bd818484611280565b505050565b5b818110156112e1576112d66000826112aa565b6001810190506112c3565b5050565b601f821115611326576112f7816111c6565b611300846111db565b8101602085101561130f578190505b61132361131b856111db565b8301826112c2565b50505b505050565b600082821c905092915050565b60006113496000198460080261132b565b1980831691505092915050565b60006113628383611338565b9150826002028217905092915050565b818103611380575050611458565b611389826111b0565b67ffffffffffffffff8111156113a2576113a1610e20565b5b6113ac8254611015565b6113b78282856112e5565b6000601f8311600181146113e657600084156113d4578287015490505b6113de8582611356565b865550611451565b601f1984166113f4876111c6565b96506113ff866111c6565b60005b8281101561142757848901548255600182019150600185019450602081019050611402565b868310156114445784890154611440601f891682611338565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060208201905081810360008301526114a38184610b6f565b905092915050565b6114b482610b18565b67ffffffffffffffff8111156114cd576114cc610e20565b5b6114d78254611015565b6114e28282856112e5565b600060209050601f8311600181146115155760008415611503578287015190505b61150d8582611356565b865550611575565b601f198416611523866111c6565b60005b8281101561154b57848901518255600182019150602085019450602081019050611526565b868310156115685784890151611564601f891682611338565b8355505b6001600288020188555050505b505050505050565b600060808201905081810360008301526115978187610b6f565b90506115a66020830186610ba8565b6115b36040830185610bd0565b6115c06060830184610bb7565b9594505050505056fea26469706673582212204188b27fdf514613e02e9dc7883236ad54bab0a260d2145f5b549d99959be0d464736f6c63430008180033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004b5760003560e01c80622e28a514610050578063433bf37b1461008357806350b7c561146100b3578063bf6be7af146100cf575b600080fd5b61006a60048036038101906100659190610ad8565b6100eb565b60405161007a9493929190610bdf565b60405180910390f35b61009d60048036038101906100989190610c2b565b6101e0565b6040516100aa9190610df4565b60405180910390f35b6100cd60048036038101906100c89190610ad8565b6103e7565b005b6100e960048036038101906100e49190610f77565b610863565b005b6000602052816000526040600020818154811061010757600080fd5b90600052602060002090600402016000915091505080600001805461012b90611015565b80601f016020809104026020016040519081016040528092919081815260200182805461015790611015565b80156101a45780601f10610179576101008083540402835291602001916101a4565b820191906000526020600020905b81548152906001019060200180831161018757829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b60603373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790611092565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156103dc57838290600052602060002090600402016040518060800160405290816000820180546102e190611015565b80601f016020809104026020016040519081016040528092919081815260200182805461030d90611015565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481525050815260200190600101906102ae565b505050509050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061046a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610461906110fe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf90611092565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061052a5761052961111e565b5b9060005260206000209060040201600001805461054690611015565b80601f016020809104026020016040519081016040528092919081815260200182805461057290611015565b80156105bf5780601f10610594576101008083540402835291602001916105bf565b820191906000526020600020905b8154815290600101906020018083116105a257829003601f168201915b505050505090506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050610652919061117c565b815481106106635761066261111e565b5b90600052602060002090600402016000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106106c1576106c061111e565b5b9060005260206000209060040201600082018160000190816106e39190611372565b506001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301559050506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806107b0576107af61145a565b5b6001900381819060005260206000209060040201600080820160006107d591906109d3565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160009055505090558273ffffffffffffffffffffffffffffffffffffffff167fec53acee17e291d4c2113d26ee57d287301f82fafa5871c806185942df36fbdf826040516108569190611489565b60405180910390a2505050565b600060405180608001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481525090506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161091b91906114ab565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015550508173ffffffffffffffffffffffffffffffffffffffff167f9e579ea0c4da0f88f445fc1ca29e6141a190d5ad059c58931481738eebddfb03853386426040516109c5949392919061157d565b60405180910390a250505050565b5080546109df90611015565b6000825580601f106109f15750610a10565b601f016020900490600052602060002090810190610a0f9190610a13565b5b50565b5b80821115610a2c576000816000905550600101610a14565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6f82610a44565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b6000819050919050565b610ab581610aa2565b8114610ac057600080fd5b50565b600081359050610ad281610aac565b92915050565b60008060408385031215610aef57610aee610a3a565b5b6000610afd85828601610a8d565b9250506020610b0e85828601610ac3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b52578082015181840152602081019050610b37565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b7a82610b18565b610b848185610b23565b9350610b94818560208601610b34565b610b9d81610b5e565b840191505092915050565b610bb181610a64565b82525050565b610bc081610aa2565b82525050565b6000819050919050565b610bd981610bc6565b82525050565b60006080820190508181036000830152610bf98187610b6f565b9050610c086020830186610ba8565b610c156040830185610bb7565b610c226060830184610bd0565b95945050505050565b600060208284031215610c4157610c40610a3a565b5b6000610c4f84828501610a8d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610ca082610b18565b610caa8185610c84565b9350610cba818560208601610b34565b610cc381610b5e565b840191505092915050565b610cd781610a64565b82525050565b610ce681610aa2565b82525050565b610cf581610bc6565b82525050565b60006080830160008301518482036000860152610d188282610c95565b9150506020830151610d2d6020860182610cce565b506040830151610d406040860182610cdd565b506060830151610d536060860182610cec565b508091505092915050565b6000610d6a8383610cfb565b905092915050565b6000602082019050919050565b6000610d8a82610c58565b610d948185610c63565b935083602082028501610da685610c74565b8060005b85811015610de25784840389528151610dc38582610d5e565b9450610dce83610d72565b925060208a01995050600181019050610daa565b50829750879550505050505092915050565b60006020820190508181036000830152610e0e8184610d7f565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e5882610b5e565b810181811067ffffffffffffffff82111715610e7757610e76610e20565b5b80604052505050565b6000610e8a610a30565b9050610e968282610e4f565b919050565b600067ffffffffffffffff821115610eb657610eb5610e20565b5b610ebf82610b5e565b9050602081019050919050565b82818337600083830152505050565b6000610eee610ee984610e9b565b610e80565b905082815260208101848484011115610f0a57610f09610e1b565b5b610f15848285610ecc565b509392505050565b600082601f830112610f3257610f31610e16565b5b8135610f42848260208601610edb565b91505092915050565b610f5481610bc6565b8114610f5f57600080fd5b50565b600081359050610f7181610f4b565b92915050565b600080600060608486031215610f9057610f8f610a3a565b5b600084013567ffffffffffffffff811115610fae57610fad610a3f565b5b610fba86828701610f1d565b9350506020610fcb86828701610f62565b9250506040610fdc86828701610a8d565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061102d57607f821691505b6020821081036110405761103f610fe6565b5b50919050565b7f596f7520617265206e6f7420746865206f776e65722100000000000000000000600082015250565b600061107c601683610b23565b915061108782611046565b602082019050919050565b600060208201905081810360008301526110ab8161106f565b9050919050565b7f496e76616c696420496e64657800000000000000000000000000000000000000600082015250565b60006110e8600d83610b23565b91506110f3826110b2565b602082019050919050565b60006020820190508181036000830152611117816110db565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118782610aa2565b915061119283610aa2565b92508282039050818111156111aa576111a961114d565b5b92915050565b6000815490506111bf81611015565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111eb565b61123286836111eb565b95508019841693508086168417925050509392505050565b6000819050919050565b600061126f61126a61126584610aa2565b61124a565b610aa2565b9050919050565b6000819050919050565b61128983611254565b61129d61129582611276565b8484546111f8565b825550505050565b600090565b6112b26112a5565b6112bd818484611280565b505050565b5b818110156112e1576112d66000826112aa565b6001810190506112c3565b5050565b601f821115611326576112f7816111c6565b611300846111db565b8101602085101561130f578190505b61132361131b856111db565b8301826112c2565b50505b505050565b600082821c905092915050565b60006113496000198460080261132b565b1980831691505092915050565b60006113628383611338565b9150826002028217905092915050565b818103611380575050611458565b611389826111b0565b67ffffffffffffffff8111156113a2576113a1610e20565b5b6113ac8254611015565b6113b78282856112e5565b6000601f8311600181146113e657600084156113d4578287015490505b6113de8582611356565b865550611451565b601f1984166113f4876111c6565b96506113ff866111c6565b60005b8281101561142757848901548255600182019150600185019450602081019050611402565b868310156114445784890154611440601f891682611338565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060208201905081810360008301526114a38184610b6f565b905092915050565b6114b482610b18565b67ffffffffffffffff8111156114cd576114cc610e20565b5b6114d78254611015565b6114e28282856112e5565b600060209050601f8311600181146115155760008415611503578287015190505b61150d8582611356565b865550611575565b601f198416611523866111c6565b60005b8281101561154b57848901518255600182019150602085019450602081019050611526565b868310156115685784890151611564601f891682611338565b8355505b6001600288020188555050505b505050505050565b600060808201905081810360008301526115978187610b6f565b90506115a66020830186610ba8565b6115b36040830185610bd0565b6115c06060830184610bb7565b9594505050505056fea26469706673582212204188b27fdf514613e02e9dc7883236ad54bab0a260d2145f5b549d99959be0d464736f6c63430008180033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
  ];
const receiveContractAddress = '0x6cA760988e48D1B95EEF692f2f908611b7F0659F';  // 替换为 receiveCids 合约地址
const receiveContractAbi = [{
    "_format": "hh-sol-artifact-1",
    "contractName": "receiveCids",
    "sourceName": "contracts/receive_cids.sol",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_sender",
            "type": "address"
          }
        ],
        "name": "getUserInfo",
        "outputs": [
          {
            "components": [
              {
                "internalType": "string",
                "name": "signature",
                "type": "string"
              },
              {
                "internalType": "bytes32",
                "name": "hashData",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "internalType": "struct receiveCids.userInfo[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_sender",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "_hashData",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "_signature",
            "type": "string"
          }
        ],
        "name": "storeUserInfo",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "users",
        "outputs": [
          {
            "internalType": "string",
            "name": "signature",
            "type": "string"
          },
          {
            "internalType": "bytes32",
            "name": "hashData",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b50610c1a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806354a02f9e146100465780636386c1c714610078578063be483b15146100a8575b600080fd5b610060600480360381019061005b9190610437565b6100c4565b60405161006f9392919061052f565b60405180910390f35b610092600480360381019061008d919061056d565b610193565b60405161009f9190610714565b60405180910390f35b6100c260048036038101906100bd9190610897565b6102d6565b005b600060205281600052604060002081815481106100e057600080fd5b90600052602060002090600302016000915091505080600001805461010490610935565b80601f016020809104026020016040519081016040528092919081815260200182805461013090610935565b801561017d5780601f106101525761010080835404028352916020019161017d565b820191906000526020600020905b81548152906001019060200180831161016057829003601f168201915b5050505050908060010154908060020154905083565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102cb578382906000526020600020906003020160405180606001604052908160008201805461022690610935565b80601f016020809104026020016040519081016040528092919081815260200182805461025290610935565b801561029f5780601f106102745761010080835404028352916020019161029f565b820191906000526020600020905b81548152906001019060200180831161028257829003601f168201915b5050505050815260200160018201548152602001600282015481525050815260200190600101906101f3565b505050509050919050565b600060405180606001604052808381526020018481526020014281525090506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816103729190610b12565b506020820151816001015560408201518160020155505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ce826103a3565b9050919050565b6103de816103c3565b81146103e957600080fd5b50565b6000813590506103fb816103d5565b92915050565b6000819050919050565b61041481610401565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b6000806040838503121561044e5761044d610399565b5b600061045c858286016103ec565b925050602061046d85828601610422565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104b1578082015181840152602081019050610496565b60008484015250505050565b6000601f19601f8301169050919050565b60006104d982610477565b6104e38185610482565b93506104f3818560208601610493565b6104fc816104bd565b840191505092915050565b6000819050919050565b61051a81610507565b82525050565b61052981610401565b82525050565b6000606082019050818103600083015261054981866104ce565b90506105586020830185610511565b6105656040830184610520565b949350505050565b60006020828403121561058357610582610399565b5b6000610591848285016103ec565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006105e282610477565b6105ec81856105c6565b93506105fc818560208601610493565b610605816104bd565b840191505092915050565b61061981610507565b82525050565b61062881610401565b82525050565b6000606083016000830151848203600086015261064b82826105d7565b91505060208301516106606020860182610610565b506040830151610673604086018261061f565b508091505092915050565b600061068a838361062e565b905092915050565b6000602082019050919050565b60006106aa8261059a565b6106b481856105a5565b9350836020820285016106c6856105b6565b8060005b8581101561070257848403895281516106e3858261067e565b94506106ee83610692565b925060208a019950506001810190506106ca565b50829750879550505050505092915050565b6000602082019050818103600083015261072e818461069f565b905092915050565b61073f81610507565b811461074a57600080fd5b50565b60008135905061075c81610736565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107a4826104bd565b810181811067ffffffffffffffff821117156107c3576107c261076c565b5b80604052505050565b60006107d661038f565b90506107e2828261079b565b919050565b600067ffffffffffffffff8211156108025761080161076c565b5b61080b826104bd565b9050602081019050919050565b82818337600083830152505050565b600061083a610835846107e7565b6107cc565b90508281526020810184848401111561085657610855610767565b5b610861848285610818565b509392505050565b600082601f83011261087e5761087d610762565b5b813561088e848260208601610827565b91505092915050565b6000806000606084860312156108b0576108af610399565b5b60006108be868287016103ec565b93505060206108cf8682870161074d565b925050604084013567ffffffffffffffff8111156108f0576108ef61039e565b5b6108fc86828701610869565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061094d57607f821691505b6020821081036109605761095f610906565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261098b565b6109d2868361098b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610a0f610a0a610a0584610401565b6109ea565b610401565b9050919050565b6000819050919050565b610a29836109f4565b610a3d610a3582610a16565b848454610998565b825550505050565b600090565b610a52610a45565b610a5d818484610a20565b505050565b5b81811015610a8157610a76600082610a4a565b600181019050610a63565b5050565b601f821115610ac657610a9781610966565b610aa08461097b565b81016020851015610aaf578190505b610ac3610abb8561097b565b830182610a62565b50505b505050565b600082821c905092915050565b6000610ae960001984600802610acb565b1980831691505092915050565b6000610b028383610ad8565b9150826002028217905092915050565b610b1b82610477565b67ffffffffffffffff811115610b3457610b3361076c565b5b610b3e8254610935565b610b49828285610a85565b600060209050601f831160018114610b7c5760008415610b6a578287015190505b610b748582610af6565b865550610bdc565b601f198416610b8a86610966565b60005b82811015610bb257848901518255600182019150602085019450602081019050610b8d565b86831015610bcf5784890151610bcb601f891682610ad8565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220742aa5b276ba2796b657f94428d6407205966d3c603e6c0fc53a1c7dcd4f373564736f6c63430008180033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806354a02f9e146100465780636386c1c714610078578063be483b15146100a8575b600080fd5b610060600480360381019061005b9190610437565b6100c4565b60405161006f9392919061052f565b60405180910390f35b610092600480360381019061008d919061056d565b610193565b60405161009f9190610714565b60405180910390f35b6100c260048036038101906100bd9190610897565b6102d6565b005b600060205281600052604060002081815481106100e057600080fd5b90600052602060002090600302016000915091505080600001805461010490610935565b80601f016020809104026020016040519081016040528092919081815260200182805461013090610935565b801561017d5780601f106101525761010080835404028352916020019161017d565b820191906000526020600020905b81548152906001019060200180831161016057829003601f168201915b5050505050908060010154908060020154905083565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102cb578382906000526020600020906003020160405180606001604052908160008201805461022690610935565b80601f016020809104026020016040519081016040528092919081815260200182805461025290610935565b801561029f5780601f106102745761010080835404028352916020019161029f565b820191906000526020600020905b81548152906001019060200180831161028257829003601f168201915b5050505050815260200160018201548152602001600282015481525050815260200190600101906101f3565b505050509050919050565b600060405180606001604052808381526020018481526020014281525090506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816103729190610b12565b506020820151816001015560408201518160020155505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ce826103a3565b9050919050565b6103de816103c3565b81146103e957600080fd5b50565b6000813590506103fb816103d5565b92915050565b6000819050919050565b61041481610401565b811461041f57600080fd5b50565b6000813590506104318161040b565b92915050565b6000806040838503121561044e5761044d610399565b5b600061045c858286016103ec565b925050602061046d85828601610422565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104b1578082015181840152602081019050610496565b60008484015250505050565b6000601f19601f8301169050919050565b60006104d982610477565b6104e38185610482565b93506104f3818560208601610493565b6104fc816104bd565b840191505092915050565b6000819050919050565b61051a81610507565b82525050565b61052981610401565b82525050565b6000606082019050818103600083015261054981866104ce565b90506105586020830185610511565b6105656040830184610520565b949350505050565b60006020828403121561058357610582610399565b5b6000610591848285016103ec565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006105e282610477565b6105ec81856105c6565b93506105fc818560208601610493565b610605816104bd565b840191505092915050565b61061981610507565b82525050565b61062881610401565b82525050565b6000606083016000830151848203600086015261064b82826105d7565b91505060208301516106606020860182610610565b506040830151610673604086018261061f565b508091505092915050565b600061068a838361062e565b905092915050565b6000602082019050919050565b60006106aa8261059a565b6106b481856105a5565b9350836020820285016106c6856105b6565b8060005b8581101561070257848403895281516106e3858261067e565b94506106ee83610692565b925060208a019950506001810190506106ca565b50829750879550505050505092915050565b6000602082019050818103600083015261072e818461069f565b905092915050565b61073f81610507565b811461074a57600080fd5b50565b60008135905061075c81610736565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107a4826104bd565b810181811067ffffffffffffffff821117156107c3576107c261076c565b5b80604052505050565b60006107d661038f565b90506107e2828261079b565b919050565b600067ffffffffffffffff8211156108025761080161076c565b5b61080b826104bd565b9050602081019050919050565b82818337600083830152505050565b600061083a610835846107e7565b6107cc565b90508281526020810184848401111561085657610855610767565b5b610861848285610818565b509392505050565b600082601f83011261087e5761087d610762565b5b813561088e848260208601610827565b91505092915050565b6000806000606084860312156108b0576108af610399565b5b60006108be868287016103ec565b93505060206108cf8682870161074d565b925050604084013567ffffffffffffffff8111156108f0576108ef61039e565b5b6108fc86828701610869565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061094d57607f821691505b6020821081036109605761095f610906565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261098b565b6109d2868361098b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610a0f610a0a610a0584610401565b6109ea565b610401565b9050919050565b6000819050919050565b610a29836109f4565b610a3d610a3582610a16565b848454610998565b825550505050565b600090565b610a52610a45565b610a5d818484610a20565b505050565b5b81811015610a8157610a76600082610a4a565b600181019050610a63565b5050565b601f821115610ac657610a9781610966565b610aa08461097b565b81016020851015610aaf578190505b610ac3610abb8561097b565b830182610a62565b50505b505050565b600082821c905092915050565b6000610ae960001984600802610acb565b1980831691505092915050565b6000610b028383610ad8565b9150826002028217905092915050565b610b1b82610477565b67ffffffffffffffff811115610b3457610b3361076c565b5b610b3e8254610935565b610b49828285610a85565b600060209050601f831160018114610b7c5760008415610b6a578287015190505b610b748582610af6565b865550610bdc565b601f198416610b8a86610966565b60005b82811015610bb257848901518255600182019150602085019450602081019050610b8d565b86831015610bcf5784890151610bcb601f891682610ad8565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220742aa5b276ba2796b657f94428d6407205966d3c603e6c0fc53a1c7dcd4f373564736f6c63430008180033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
  ];

if (typeof window.ethereum === 'undefined') {
    console.error('请先安装MetaMask');
    alert('请先安装MetaMask');
}

// 获取文件列表按钮点击事件
document.getElementById('getFilesButton').addEventListener('click', async () => {
    await getFilesFromContract();
});

// 获取指定 CID 的文件按钮点击事件
document.getElementById('getFileButton').addEventListener('click', async () => {
    const cid = document.getElementById('cidInput').value;
    if (cid) {
        await getFileFromIPFS(cid);
    } else {
        alert('请输入 CID');
    }
});

// 签名按钮点击事件
document.getElementById('signButton').addEventListener('click', async () => {
    const cid = document.getElementById('signButton').dataset.cid;
    const senderAddress = document.getElementById('signButton').dataset.sender;
    await signFile(cid, senderAddress);
});

// 拒绝签名按钮点击事件
document.getElementById('rejectButton').addEventListener('click', () => {
    const cid = document.getElementById('rejectButton').dataset.cid;
    const userAddress = document.getElementById('userAddress').value;
    rejectSignature(cid, userAddress);
});

//获取签名者文件列表
async function getFilesFromContract() {
    try {
        const provider = new ethers.providers.Web3Provider(window.ethereum)
        const signer = provider.getSigner()
        const userAddress = await signer.getAddress()

        const contract = new ethers.Contract(storeContractAddress, storeContractAbi, signer)

        const files = await contract.getFile(userAddress)

        const filesList = document.getElementById('filesList')
        filesList.innerHTML = ''

        files.forEach((file, index) => {
            const listItem = document.createElement('li')
            listItem.innerText = `文件 ${index + 1}: CID - ${file.cid}, Digest - ${file.digest}`
            filesList.appendChild(listItem)
        })
    } catch (error) {
        console.error(`获取文件失败：`, error)
    }
}

async function signFile(cid) {
    try {
        const provider = new ethers.providers.Web3Provider(window.ethereum);
        const signer = provider.getSigner();
        const userAddress = await signer.getAddress();
        const contract = new ethers.Contract(storeContractAddress, storeContractAbi, signer);

        const files = await contract.getFile(userAddress);
        const file = files.find(f => f.cid === cid);
        if (!file) {
            alert('未查询到文件，请检查CID');
            return;
        }

        const expectedDigest = file.digest;

        // 从 IPFS 获取文件内容
        const stream = ipfs.cat(cid);
        let fileContent = '';
        for await (const chunk of stream) {
            fileContent += new TextDecoder().decode(chunk);
        }

        const actualDigest = ethers.utils.keccak256(ethers.utils.toUtf8Bytes(fileContent));
        if (actualDigest === expectedDigest) {
            document.getElementById('fileContent').innerText = fileContent;
            console.log('文件完整性验证通过，文件内容已展示');

            // 显示签名和拒绝签名的按钮
            document.getElementById('signButton').style.display = 'inline-block';
            document.getElementById('rejectButton').style.display = 'inline-block';

            // 通过 dataset 存储 CID 和 senderAddress
            document.getElementById('signButton').dataset.cid = cid;
            document.getElementById('signButton').dataset.sender = file.sender;
            document.getElementById('rejectButton').dataset.cid = cid;

            // 签名文件
            const message = `验证通过，CID为${cid}`;
            const signature = await signer.signMessage(message);
            console.log(`签名完成：`, signature);

            // const encryptedMessage = await encryptWithSenderPublicKey(file.sender, fileContent)
            await storeUserInfo(userAddress, cid, signature);

            // await sendToBackend(encryptedMessage);
            await deleteCid(cid, userAddress);

            alert('文件签名成功，CID 已删除，密文已发送到后端！');
        } else {
            console.error('文件摘要不匹配，文件可能被篡改');

            // 提供删除文件的选项
            const confirmDelete = confirm('文件摘要不匹配，文件可能被篡改。是否删除文件记录？');
            if (confirmDelete) {
                await deleteCid(cid, userAddress);
                alert('文件记录已删除');
            } else {
                alert('文件记录未删除');
            }
        }
    } catch (error) {
        console.error('获取文件或验证失败:', error);
    }
}


//将密文发送到后端
// async function sendToBackend(encryptedMessage) {
//     try {
//         const response = await fetch('https://your-backend-api.com/encrypt', {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json',
//             },
//             body: JSON.stringify({ encryptedMessage })
//         });
//         if (response.ok) {
//             console.log('密文已成功发送到后端');
//         } else {
//             console.error('发送密文到后端失败');
//         }
//     } catch (error) {
//         console.error('发送密文到后端失败:', error);
//     }
// }

//公钥加密
async function encryptWithSenderPublicKey(senderAddress, message) {
    // 假设你有一个加密函数，这里使用 senderAddress 作为公钥
    // 返回加密后的密文
    return `Encrypted(${message}) with ${senderAddress}`;
}

async function storeUserInfo(senderAddress, cid, signature) {
    try {
        const provider = new ethers.providers.Web3Provider(window.ethereum)
        const signer = provider.getSigner()
        const contract = new ethers.Contract(receiveContractAddress, receiveContractAbi, signer)

        const digest = ethers.utils.keccak256(ethers.utils.toUtf8Bytes(cid))

        // 调用合约存储用户信息
        const tx = await contract.storeUserInfo(senderAddress, digest, signature)
        await tx.wait()
        console.log('用户信息存储成功')
    } catch (error) {
        console.error('存储用户信息失败:', error)
    }
}

//拒绝签名
function rejectSignature(cid, userAddress) {
    const confirmDelete = confirm('您拒绝签名，是否确认删除该文件？')
    if (confirmDelete) {
        deleteCid(cid, userAddress)
    }
}

async function deleteCid(cid, userAddress) {
    try {
        const provider = new ethers.providers.Web3Provider(window.ethereum)
        const signer = provider.getSigner()
        const contract = new ethers.Contract(storeContractAddress, storeContractAbi, signer)

        // 查找需要删除的 CID 的索引
        const files = await contract.getFiles(userAddress)
        let indexToDelete = -1
        for (let i = 0; i < files.length; i++) {
            if (files[i].cid === cid) {
                indexToDelete = i
                break
            }
        }

        if (indexToDelete !== -1) {
            // 调用合约删除 CID
            const tx = await contract.deleteCid(userAddress, indexToDelete)
            await tx.wait()
            console.log('CID 删除成功')
        } else {
            console.error('未找到需要删除的 CID')
        }
    } catch (error) {
        console.error('删除 CID 失败:', error)
    }
}